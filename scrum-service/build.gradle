import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.jetbrains.kotlin.jvm'
	id 'org.jetbrains.kotlin.plugin.spring'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	implementation project(path: ':ideas-service')
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql:42.6.0'
	runtimeOnly 'org.postgresql:r2dbc-postgresql:1.0.2.RELEASE'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}
tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '19'
	}
}
tasks.named("bootBuildImage") {
	imageName.set("lexunok/scrum-service")
	publish = true
	docker {
		publishRegistry {
			username ='lexunok'
			password = System.getProperty('token')
		}
	}
}
